# -*- muttrc -*-
#
# Command formats for gpg.
# 

# use gpgme and gpg-agent if available
set crypt_use_gpgme
set pgp_use_gpg_agent

# encrypt also to self
set pgp_encrypt_self

# decode application/pgp
set pgp_decode_command="gpg2 --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

# verify a pgp/mime signature
set pgp_verify_command="gpg2 --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"

# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg2 --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"

# create a pgp/mime signed attachment
set pgp_sign_command="gpg2 --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --detach-sign --textmode %?a?-u %a? %f"

# create a application/pgp signed (old-style) message
set pgp_clearsign_command="gpg2 --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --textmode --clearsign %?a?-u %a? %f"

# create a pgp/mime encrypted attachment
set pgp_encrypt_only_command="pgpewrap gpg2 --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"

# create a pgp/mime encrypted and signed attachment
set pgp_encrypt_sign_command="pgpewrap gpg2 %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"

# import a key into the public key ring
set pgp_import_command="gpg2 --no-verbose --import %f"

# export a key from the public key ring
set pgp_export_command="gpg2 --no-verbose --export --armor %r"

# verify a key
set pgp_verify_key_command="gpg2 --verbose --batch --fingerprint --check-sigs %r"

# read in the public key ring
set pgp_list_pubring_command="gpg2 --no-verbose --batch --quiet --with-colons --list-keys %r"

# read in the secret key ring
set pgp_list_secring_command="gpg2 --no-verbose --batch --quiet --with-colons --list-secret-keys %r"

# pattern for good signature - may need to be adapted to locale! It's a regexp
# used against the GPG output: if it matches some line of the output then mutt
# considers the message a good signed one (ignoring the GPG exit code)
set pgp_good_sign="^gpg: Poprawny podpis"

# this set the number of seconds to keep in memory the passpharse used to encrypt/sign
# the more the less secure it will be
set pgp_timeout=60

# automatically sign all outcoming messages
folder-hook . set crypt_autosign

# sign replies to signed messages
set crypt_replysign

set crypt_autoencrypt=no
set crypt_verify_sig=yes
